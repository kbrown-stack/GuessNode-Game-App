<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GuessNode Application</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h1>Welcome to GuessNode Game</h1>

    <button onclick="createGame()">Create Game</button>
    <button onclick="joinGame()">Join Game</button>
   
    <script>
        const socket = io();

        // This enable us to listen for session creation event  // Observing the gameCreated event before navigating

                    socket.on("gameCreated", ({ sessionId }) => {
                console.log("Game Created! Redirecting to game:", sessionId)
                window.location.href = `/game/${sessionId}`;
            });

// Create Game Function

      function createGame() {
            const username = prompt("Enter your username:");
            if (!username) {
                alert("Please enter your username");
                return;
            }
            socket.emit("setUsername", { username }); // This stores the username in the server.
    
            socket.emit("createGame", { username });

            socket.on("gameCreated", ({sessionId}) => {

                window.location.href = `/game/${sessionId}`;
            });

        }


// Join Game Fuction
        function joinGame() {
            const sessionId = prompt("Enter the Game ID to join:");
            if (!sessionId || !sessionId.trim()) {
                alert("Please enter a valid Game ID");
                return;
            }

            const username = prompt("Enter your username:");
            if(!username) {
                alert("Please enter a valid username");
                return;
            }

            sessionStorage.setItem("username", username);

            // console.log(`Attempting to join game: ${sessionId}`);
            socket.emit("setUsername", username); // this stores username on the server.
            socket.emit("checkGame", {sessionId});

            // Check the server before redirecting 
            const formattedSessionId = sessionId.startsWith("game") ? sessionId : `game-${sessionId}`;
            socket.emit("checkGame", {sessionId: formattedSessionId });

            // The use of "once" is to enable it to listen to the next response.
            socket.once("gameExists", (exists) => {
                // console.log(`Server response for session  ${sessionId}: ${exists}`);

                if (exists) {
                    window.location.href = `/game/${sessionId}`; // This is to join the game if it exits. 
                } else {
                    alert(" Game session is not valid. Please kindly check your ID");
                }
            })
            
        }

    </script>

     <!-- <button onclick="joinGame()">Join Game</button> -->

</body>
</html>