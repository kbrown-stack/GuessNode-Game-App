<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GameSession Room</title>
    <script src="/socket.io/socket.io.js"></script>
  </head>
  <body>
    <h1>GameSession Room</h1>
    <h3>Session ID: <%= sessionId %></h3>
    <h3>GameSession Master: <%= gameMaster %></h3>  <!--This displays the GameSession master-->
    <ul id="playersList"></ul>

    <button onclick="startGameSession()">Start GameSession </button>

    <div id="GameSessionArea" style="display: none;">
        <h2 id="question">Question: </h2>
        <input type="text" id="guessInput" placeholder="Enter your guess">
        <button onclick="submitGuess()">Submit</button>
    </div>

    <script>
      const socket = io();
      const sessionId = "<%= sessionId %>";

      window.onload = () => {
        // This is to comfirm if player or user is already existing

        let sessionId = sessionStorage.getItem("sessionId");
        let username = sessionStorage.getItem("username");

        // If no username is seen here, prompt the user to input it.
        if (!username) {
          username = prompt("Enter your username:");
          if (!username) {
            alert("Please enter your username");
            window.location.href = "/"; // This redirects it back to the home page which is the index page if no username.
            return;
          }
          sessionStorage.setItem("username", username); // This saves username
        }

        if (!sessionId) {
          alert("Error: No session ID found. ");
          window.location.href = "/";
          return;
        }

        console.log("Emiting joinGameSession event with:", {sessionId, username})



        // This emits the GameSession event session

        // setTimeout(() => {
        //   socket.emit("joinGameSession", { sessionId, username });
        // }, 1000); // Wait 1 second before checking

        //To Hanlde the users/players update list.

        socket.on("updatePlayers", (players) => {
          console.log("Updated players list:", players);
          
          const playersList = document.getElementById("playersList");
          playersList.innerHTML = ""; // This clears the users/players list.
          players.forEach((player) => {
            playersList.innerHTML += `<li>${player.username} (Score: ${player.score})</li>`;
          });
        });

        // GameSession Joined

        socket.on("GameSessionJoined", ({sessionId}) => {
          console.log("Joined GameSession successfully:", sessionId);
          document.getElementById("GameSessionArea").style.display = "block";  // This shows the GameSession area.
        })


        socket.on("error", (data) => {
          console.error("Error:", data.message);
          alert(data.message);
          // window.location.href = "/"; // This redirects it back to the home page which is the index page if is wrong guess.
        });
      };

        // This handles start GameSession and displays questions

        socket.on("GameSessionStarted", (data) => {
          document.getElementById(
            "question"
          ).innerText = `Question: ${data.question}`;
          document.getElementById("GameSessionArea").style.display = "block";
        });

        // This Handles wrong guess

        socket.on("wrongGuess", ({remainingAttempts}) => {
          alert(`Wrong guess, Attempts remaining : ${remainingAttempts}`);
        });

        // Handle out of attempts

        socket.on("outOfAttempts", (data) => {
          alert(data.message);
        });

        // This handle the End of GameSession
        socket.on("GameSessionEnded", (data) => {
          alert(`${data.message} The answer was: ${data.answer}`);
          document.getElementById("GameSessionArea").style.display = "none";
        });


      function startGameSession() {
        socket.emit("startGameSession", { sessionId });
      }

      function submitGuess() {
        const guess = document.getElementById("guessInput").value;
        if (!guess.trim()) return;

        socket.emit("submitGuess", {
          sessionId,
          username: sessionStorage.getItem("username"),
          guess,
        });

        document.getElementById("guessInput").value = "";
      }

    </script>
  </body>
</html>
